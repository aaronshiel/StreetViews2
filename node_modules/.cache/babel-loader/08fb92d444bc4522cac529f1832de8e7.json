{"ast":null,"code":"var _jsxFileName = \"/root/ReactOnRailsTest/app/javascript/bundles/HelloWorld/components/DisplayListOfNames.jsx\",\n    _this = this;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nvar DisplayListOfNames = function DisplayListOfNames(props) {\n  var _useState = useState(props.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      names = _useState2[0],\n      setNames = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderStyle: \"dotted\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, names.array.forEach(function (name) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, name);\n  })));\n};\n\nDisplayListOfNames.propTypes = {\n  names: PropTypes.array.isRequired // this is passed from the Rails view\n\n};\nexport default DisplayListOfNames;","map":{"version":3,"sources":["/root/ReactOnRailsTest/app/javascript/bundles/HelloWorld/components/DisplayListOfNames.jsx"],"names":["PropTypes","React","useState","DisplayListOfNames","props","name","names","setNames","borderStyle","array","forEach","propTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,kBAA0BF,QAAQ,CAACE,KAAK,CAACC,IAAP,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAC;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,KAAN,CAAYC,OAAZ,CAAoB,UAAAL,IAAI,EAAI;AAC3B,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHA,IADG,CAAN;AAGD,GAJA,CADH,CADF,CADF;AAWD,CAdD;;AAgBAF,kBAAkB,CAACQ,SAAnB,GAA+B;AAC7BL,EAAAA,KAAK,EAAEN,SAAS,CAACS,KAAV,CAAgBG,UADM,CACM;;AADN,CAA/B;AAIA,eAAeT,kBAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst DisplayListOfNames = (props) => {\n  const [names, setNames] = useState(props.name);\n\n  return (\n    <div style={{borderStyle:\"dotted\"}}>\n      <ul>\n        {names.array.forEach(name => {\n          return<li>\n            {name}\n            </li>\n        })}\n      </ul>\n    </div>\n  );\n};\n\nDisplayListOfNames.propTypes = {\n  names: PropTypes.array.isRequired, // this is passed from the Rails view\n};\n\nexport default DisplayListOfNames;\n"]},"metadata":{},"sourceType":"module"}